@page "/"
@using global::Calendar.Meetings
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.JSInterop
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject MeetingService MeetingService
@inject IJSRuntime JS
<div class="w-2/3">
  <div class="flex justify-between items-center">
    <h1 class="mb-4 text-4xl font-extrabold tracking-tight text-gray-800 focus-visible:outline-none">Kalendář</h1>
    @if (_isAuthenticated)
    {
      <p>Jsi přihlášený jako: @_userName</p>
      <button
        @onclick="Logout"
        class="text-red-700 hover:text-white border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2">
        Odhlásit
      </button>
    }
    else
    {
      <button @onclick="Login" type="button" class="text-white bg-[#4285F4] hover:bg-[#4285F4]/90 focus:ring-4 focus:outline-none focus:ring-[#4285F4]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-[#4285F4]/55 me-2 mb-2">
        <svg class="w-4 h-4 me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 19">
          <path fill-rule="evenodd" d="M8.842 18.083a8.8 8.8 0 0 1-8.65-8.948 8.841 8.841 0 0 1 8.8-8.652h.153a8.464 8.464 0 0 1 5.7 2.257l-2.193 2.038A5.27 5.27 0 0 0 9.09 3.4a5.882 5.882 0 0 0-.2 11.76h.124a5.091 5.091 0 0 0 5.248-4.057L14.3 11H9V8h8.34c.066.543.095 1.09.088 1.636-.086 5.053-3.463 8.449-8.4 8.449l-.186-.002Z" clip-rule="evenodd"/>
        </svg>
        Přihlášení přes Google
      </button>
    }
  </div>
  @if (_isAuthenticated)
  {
    <div class="flex justify-center gap-4">
      <button @onclick="GenerateLink"
              class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2">
        Nová schůzka
      </button>
      <NavLink href="/calendar"
               class="text-white bg-gradient-to-r from-green-400 via-green-500 to-green-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2">
        Otevřít kalendář
      </NavLink>
    </div>
      @if (_generatedLink is not null)
      {
        <div class="mt-4 space-y-2">
          <h3 class="text-sm font-medium text-gray-500">Odkaz pro vytvoření nové schůzky:</h3>
          <div class="flex items-center gap-2">
            <a href="@_generatedLink" class="text-blue-600 hover:text-blue-800 underline break-all">@_generatedLink</a>
            <button @onclick="CopyToClipboard" class="p-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
              </svg>
            </button>
          </div>
        </div>
      }
  }
</div>

@code {
  bool _isAuthenticated;
  string _userName = string.Empty;
  string _userId = string.Empty;

  string? _generatedLink;


  protected override async Task OnInitializedAsync()
  {
    var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    var user = authState.User;
    if (user.Identity?.IsAuthenticated is true)
    {
      _isAuthenticated = true;
      _userName = user.Identity.Name ?? "Uživatel";
      _userId = user.FindFirst(c => c.Type == "UserId")?.Value ?? "Neznámé ID";
    }
  }

  void Login() => Navigation.NavigateTo("/login", true);
  void Logout() => Navigation.NavigateTo("/logout", true);

  async Task GenerateLink()
  {
    _generatedLink = await MeetingService.GenerateLink(Convert.ToInt32(_userId), Navigation.BaseUri.TrimEnd('/'));
  }

  async Task CopyToClipboard()
  {
    if (_generatedLink != null)
    {
      await JS.InvokeVoidAsync("navigator.clipboard.writeText", _generatedLink);
    }
  }

}